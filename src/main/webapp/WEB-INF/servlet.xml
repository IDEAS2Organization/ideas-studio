<?xml version="1.0" encoding="UTF-8"?>


<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
	    http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd
	    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd            
	">

	<!-- Context -->

	<!-- Load properties files -->
	<import resource="/config/properties.xml" />

	<!-- Import basic SpringMVC Resteasy integration <import resource="classpath:springmvc-resteasy.xml"/> -->

	<import resource="config/packages.xml" />

	<context:annotation-config />

	<!-- Spring MVC Configuration -->

	<import resource="config/resources.xml" />

	<mvc:annotation-driven validator="validator"
		conversion-service="conversionService">

		<!-- We register a custom object mapper -->
		<mvc:message-converters register-defaults="true">
			<bean
				class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
				<property name="objectMapper" ref="customObjectMapper" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<bean id="customObjectMapper"
		class="es.us.isa.ideas.app.resources.config.CustomJacksonObjectMapper" />

	<!-- Converters -->

	<import resource="config/converters.xml" />

	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters" ref="converters" />
	</bean>

	<!-- Data -->

	<import resource="config/data.xml" />

	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />


	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" ref="persistenceUnit" />
		<property name="jpaProperties" ref="jpaProperties" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform" ref="sqlDialect" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="openEntityManagerInViewInterceptor"
		class="org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor" />

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<ref bean="openEntityManagerInViewInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- I18n and L10n -->

	<import resource="config/i18n-l10n.xml" />

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames" ref="messages" />
		<property name="defaultEncoding" value="ISO-8859-1" />
		<property name="fallbackToSystemLocale" value="false" />
	</bean>

	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="en" />
		<property name="cookieName" value="language" />
		<property name="cookieMaxAge" value="100000" />
	</bean>

	<bean id="localeChangeInterceptor"
		class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		<property name="paramName" value="language" />
	</bean>

	<bean id="handlerMapping"
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="interceptors">
			<ref bean="localeChangeInterceptor" />
		</property>
	</bean>

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<ref bean="localeChangeInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- Validator -->

	<bean name="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<!-- Security -->

	<import resource="config/security.xml" />

	<security:authentication-manager>
		<security:authentication-provider
			user-service-ref="loginService">
			<security:password-encoder ref="passwordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>

	<!-- Tiles -->

	<import resource="config/tiles.xml" />

	<!-- Social Networks -->

	<import resource="config/social.xml" />

	<!-- E-mail -->
	<import resource="config/email.xml" />

	<!-- Beans configuration <bean id="deployer" name="deployer" class="es.us.isa.moses.jlibsea.deployer.folder.FolderDeployer" 
		primary="false" autowire="default" autowire-candidate="true"> <property name="baseDeploymentPath" 
		value="./deploymentContexts/" /> </bean> <bean id="executor" name="executor" 
		class="es.us.isa.moses.e3.domain.executor.SequentialFilesystemExecutorImplementation" 
		primary="false" autowire="default" autowire-candidate="true"/> -->

	<bean
		class="org.springframework.web.context.support.ServletContextAttributeExporter">
		<property name="attributes">
			<map>
				<entry key="studioConfiguration" value-ref="studioConfiguration" />
			</map>
		</property>
	</bean>
</beans>