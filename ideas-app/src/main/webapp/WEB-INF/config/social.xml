<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:facebook="http://www.springframework.org/schema/social/facebook"
       xmlns:twitter="http://www.springframework.org/schema/social/twitter"
       xmlns:social="http://www.springframework.org/schema/social"
       xmlns:linkedin="http://www.springframework.org/schema/social/linkedin"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" 	   
       xsi:schemaLocation="http://www.springframework.org/schema/social/facebook http://www.springframework.org/schema/social/spring-social-facebook.xsd
		http://www.springframework.org/schema/social/linkedin http://www.springframework.org/schema/social/spring-social-linkedin.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd		
                http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd		
                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/social/twitter http://www.springframework.org/schema/social/spring-social-twitter.xsd
		http://www.springframework.org/schema/social http://www.springframework.org/schema/social/spring-social.xsd
		">

     <!-- Context import -->  
     <import resource="classpath:/spring-social-jpa-hibernate-config.xml" />
    	   	
    <!-- Configuration needed for having Spring Social with JPA and Hibernate -->      
    <bean id="connectionFactoryLocator" 
          class="org.springframework.social.security.SocialAuthenticationServiceRegistry">
        <property name="connectionFactories">
            <list>
                <bean class="org.springframework.social.twitter.connect.TwitterConnectionFactory">
                    <constructor-arg value="${twitter.consumerKey}" />
                    <constructor-arg value="${twitter.consumerSecret}" />				
                </bean>
                <bean class="org.springframework.social.facebook.connect.FacebookConnectionFactory">
                    <constructor-arg value="${facebook.clientId}" />
                    <constructor-arg value="${facebook.clientSecret}" />				
                </bean>
                <bean class="org.springframework.social.linkedin.connect.LinkedInConnectionFactory">
                    <constructor-arg value="${linkedin.consumerKey}" />
                    <constructor-arg value="${linkedin.consumerSecret}" />				
                </bean>
                <bean class="org.springframework.social.google.connect.GoogleConnectionFactory">
                    <constructor-arg value="${google.consumerKey}" />
                    <constructor-arg value="${google.consumerSecret}" />
                </bean>
                <bean class="org.springframework.social.github.connect.GitHubConnectionFactory">
                    <constructor-arg value="${github.consumerKey}" />
                    <constructor-arg value="${github.consumerSecret}" />
                </bean>
            </list>
        </property>
    </bean>
	
    <!-- class="org.springframework.social.connect.jpa.JpaUsersConnectionRepository"> -->
     <bean id="usersConnectionRepository"
        class="org.springframework.social.connect.jpa.JpaUsersConnectionRepository">
        <constructor-arg ref="userConnectionDao" />
        <constructor-arg ref="connectionFactoryLocator" />
        <constructor-arg ref="textEncryptor" />
    </bean>

    <bean id="userConnectionDao" class="org.springframework.social.connect.jpa.hibernate.UserConnectionDao"/>

    <bean class="es.us.isa.ideas.app.social.CustomConnectionRepository"
          id="userConnectionRepository"  scope="request">        
        <property name="userId" value="#{request.userPrincipal.name}" />
        <property name="JpaTemplate" ref="userConnectionDao" />
        <property name="connectionFactoryLocator" ref="connectionFactoryLocator" />
        <property name="textEncryptor" ref="textEncryptor" />
        <aop:scoped-proxy proxy-target-class="false" />
    </bean>
    
    <bean
        class="org.springframework.social.connect.jpa.JpaConnectionRepository"
        id="connectionRepository" factory-method="createConnectionRepository"
        factory-bean="usersConnectionRepository" scope="request">
        <constructor-arg value="#{request.userPrincipal.name}" />
        <aop:scoped-proxy proxy-target-class="true" />
    </bean>
    
    
    
    <!-- Configuration of the connection controller -->
    <bean id="SocialNetworksConfigController"  
          class="org.springframework.social.connect.web.ConnectController" 
          autowire="constructor">        
        <!-- relies on by-type autowiring for the constructor-args -->
        <constructor-arg ref="connectionFactoryLocator" />
        <constructor-arg ref="connectionRepository" />
        
        <property name="interceptors">
            <list>
                <bean class="es.us.isa.ideas.app.social.twitter.TweetAfterConnectInterceptor" />
            </list>
        </property>
    </bean>
    
    <!-- <bean id="psc" class="org.springframework.social.connect.web.ProviderSignInController" autowire="constructor" />

    <bean id="disconnectController" class="org.springframework.social.facebook.web.DisconnectController" >
        <constructor-arg ref="usersConnectionRepository"/>
        <constructor-arg value="${facebook.clientSecret}"/>  
    </bean>		 -->		
    
    <!-- <beans profile="dev">-->
    <bean id="textEncryptor" class="org.springframework.security.crypto.encrypt.Encryptors" 
          factory-method="noOpText" />
    <!-- </beans> -->
	
    <!-- <beans profile="prod">
        <bean id="textEncryptor" class="org.springframework.security.crypto.encrypt.Encryptors" 
              factory-method="text">
            <constructor-arg value="${security.encryptPassword}" />
            <constructor-arg value="${security.encryptSalt}" />
        </bean>
    </beans> -->
       
       
    <!-- SIGNIN CONFIGURATION -->    
    <!-- Configuration for SignIn based on social accounts -->
    <bean class="org.springframework.social.connect.web.ProviderSignInController">
   		 <!-- relies on by-type autowiring for the constructor-args -->
   		 <!--  Callbak URL of our application:  -->
   		 <!--<property name="applicationUrl" value="${application.url}" /> -->
   		 <property name="signUpUrl" value="/social/signup" />
                 <property name="signInUrl" value="/security/login" />
	</bean>
	
	<!-- Configure a Twitter service provider
    <bean class="org.springframework.social.twitter.connect.TwitterServiceProvider">
        <constructor-arg value="${twitter.consumerKey}" />
        <constructor-arg value="${twitter.consumerSecret}" />
        <constructor-arg ref="connectionRepository" />
    </bean> -->
	<!-- Configure a Twitter signin controller
	<bean class="org.springframework.social.twitter.web.TwitterSigninController">
    	<constructor-arg value="${application.url}" />
	</bean> -->
    <!-- Configure a Facebook service provider
    <bean class="org.springframework.social.facebook.connect.FacebookServiceProvider">
        <constructor-arg value="${facebook.appId}" />
        <constructor-arg value="${facebook.appSecret}" />
        <constructor-arg ref="connectionRepository" />
    </bean> -->
    <!-- Configure a Facebook signin controller
    <bean class="org.springframework.social.facebook.web.FacebookSigninController">    	
	</bean> -->
     
    
</beans>